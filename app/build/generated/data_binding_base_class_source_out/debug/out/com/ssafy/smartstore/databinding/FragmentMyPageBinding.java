// Generated by view binder compiler. Do not edit!
package com.ssafy.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ssafy.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout containerGrade;

  @NonNull
  public final ConstraintLayout containerProfile;

  @NonNull
  public final ImageView ivGrade;

  @NonNull
  public final ImageView ivLogout;

  @NonNull
  public final ImageView ivProfile;

  @NonNull
  public final ImageView ivSpace;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvOrderlist;

  @NonNull
  public final TextView tvIntroduce;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvOrder;

  @NonNull
  public final TextView tvSeedCount;

  @NonNull
  public final TextView tvSeedInfo;

  @NonNull
  public final TextView tvSeedLevelupInfo;

  private FragmentMyPageBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout containerGrade, @NonNull ConstraintLayout containerProfile,
      @NonNull ImageView ivGrade, @NonNull ImageView ivLogout, @NonNull ImageView ivProfile,
      @NonNull ImageView ivSpace, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView rvOrderlist, @NonNull TextView tvIntroduce, @NonNull TextView tvName,
      @NonNull TextView tvOrder, @NonNull TextView tvSeedCount, @NonNull TextView tvSeedInfo,
      @NonNull TextView tvSeedLevelupInfo) {
    this.rootView = rootView;
    this.containerGrade = containerGrade;
    this.containerProfile = containerProfile;
    this.ivGrade = ivGrade;
    this.ivLogout = ivLogout;
    this.ivProfile = ivProfile;
    this.ivSpace = ivSpace;
    this.progressBar = progressBar;
    this.rvOrderlist = rvOrderlist;
    this.tvIntroduce = tvIntroduce;
    this.tvName = tvName;
    this.tvOrder = tvOrder;
    this.tvSeedCount = tvSeedCount;
    this.tvSeedInfo = tvSeedInfo;
    this.tvSeedLevelupInfo = tvSeedLevelupInfo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container_grade;
      ConstraintLayout containerGrade = ViewBindings.findChildViewById(rootView, id);
      if (containerGrade == null) {
        break missingId;
      }

      id = R.id.container_profile;
      ConstraintLayout containerProfile = ViewBindings.findChildViewById(rootView, id);
      if (containerProfile == null) {
        break missingId;
      }

      id = R.id.iv_grade;
      ImageView ivGrade = ViewBindings.findChildViewById(rootView, id);
      if (ivGrade == null) {
        break missingId;
      }

      id = R.id.iv_logout;
      ImageView ivLogout = ViewBindings.findChildViewById(rootView, id);
      if (ivLogout == null) {
        break missingId;
      }

      id = R.id.iv_profile;
      ImageView ivProfile = ViewBindings.findChildViewById(rootView, id);
      if (ivProfile == null) {
        break missingId;
      }

      id = R.id.iv_space;
      ImageView ivSpace = ViewBindings.findChildViewById(rootView, id);
      if (ivSpace == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rv_orderlist;
      RecyclerView rvOrderlist = ViewBindings.findChildViewById(rootView, id);
      if (rvOrderlist == null) {
        break missingId;
      }

      id = R.id.tv_introduce;
      TextView tvIntroduce = ViewBindings.findChildViewById(rootView, id);
      if (tvIntroduce == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_order;
      TextView tvOrder = ViewBindings.findChildViewById(rootView, id);
      if (tvOrder == null) {
        break missingId;
      }

      id = R.id.tv_seed_count;
      TextView tvSeedCount = ViewBindings.findChildViewById(rootView, id);
      if (tvSeedCount == null) {
        break missingId;
      }

      id = R.id.tv_seed_info;
      TextView tvSeedInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvSeedInfo == null) {
        break missingId;
      }

      id = R.id.tv_seed_levelup_info;
      TextView tvSeedLevelupInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvSeedLevelupInfo == null) {
        break missingId;
      }

      return new FragmentMyPageBinding((ConstraintLayout) rootView, containerGrade,
          containerProfile, ivGrade, ivLogout, ivProfile, ivSpace, progressBar, rvOrderlist,
          tvIntroduce, tvName, tvOrder, tvSeedCount, tvSeedInfo, tvSeedLevelupInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
